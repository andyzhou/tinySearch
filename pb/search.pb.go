// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package search

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//message for doc sync request
type DocSyncReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	DocId                string   `protobuf:"bytes,2,opt,name=docId,proto3" json:"docId,omitempty"`
	Json                 []byte   `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocSyncReq) Reset()         { *m = DocSyncReq{} }
func (m *DocSyncReq) String() string { return proto.CompactTextString(m) }
func (*DocSyncReq) ProtoMessage()    {}
func (*DocSyncReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *DocSyncReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocSyncReq.Unmarshal(m, b)
}
func (m *DocSyncReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocSyncReq.Marshal(b, m, deterministic)
}
func (m *DocSyncReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocSyncReq.Merge(m, src)
}
func (m *DocSyncReq) XXX_Size() int {
	return xxx_messageInfo_DocSyncReq.Size(m)
}
func (m *DocSyncReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DocSyncReq.DiscardUnknown(m)
}

var xxx_messageInfo_DocSyncReq proto.InternalMessageInfo

func (m *DocSyncReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DocSyncReq) GetDocId() string {
	if m != nil {
		return m.DocId
	}
	return ""
}

func (m *DocSyncReq) GetJson() []byte {
	if m != nil {
		return m.Json
	}
	return nil
}

//message for doc remove request
type DocRemoveReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	DocId                []string `protobuf:"bytes,2,rep,name=docId,proto3" json:"docId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocRemoveReq) Reset()         { *m = DocRemoveReq{} }
func (m *DocRemoveReq) String() string { return proto.CompactTextString(m) }
func (*DocRemoveReq) ProtoMessage()    {}
func (*DocRemoveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *DocRemoveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocRemoveReq.Unmarshal(m, b)
}
func (m *DocRemoveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocRemoveReq.Marshal(b, m, deterministic)
}
func (m *DocRemoveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocRemoveReq.Merge(m, src)
}
func (m *DocRemoveReq) XXX_Size() int {
	return xxx_messageInfo_DocRemoveReq.Size(m)
}
func (m *DocRemoveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DocRemoveReq.DiscardUnknown(m)
}

var xxx_messageInfo_DocRemoveReq proto.InternalMessageInfo

func (m *DocRemoveReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DocRemoveReq) GetDocId() []string {
	if m != nil {
		return m.DocId
	}
	return nil
}

//message for doc sync response
type DocSyncResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocSyncResp) Reset()         { *m = DocSyncResp{} }
func (m *DocSyncResp) String() string { return proto.CompactTextString(m) }
func (*DocSyncResp) ProtoMessage()    {}
func (*DocSyncResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *DocSyncResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocSyncResp.Unmarshal(m, b)
}
func (m *DocSyncResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocSyncResp.Marshal(b, m, deterministic)
}
func (m *DocSyncResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocSyncResp.Merge(m, src)
}
func (m *DocSyncResp) XXX_Size() int {
	return xxx_messageInfo_DocSyncResp.Size(m)
}
func (m *DocSyncResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DocSyncResp.DiscardUnknown(m)
}

var xxx_messageInfo_DocSyncResp proto.InternalMessageInfo

func (m *DocSyncResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

//message for doc query request
type DocQueryReq struct {
	Kind                 int32    `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Json                 []byte   `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocQueryReq) Reset()         { *m = DocQueryReq{} }
func (m *DocQueryReq) String() string { return proto.CompactTextString(m) }
func (*DocQueryReq) ProtoMessage()    {}
func (*DocQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *DocQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocQueryReq.Unmarshal(m, b)
}
func (m *DocQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocQueryReq.Marshal(b, m, deterministic)
}
func (m *DocQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocQueryReq.Merge(m, src)
}
func (m *DocQueryReq) XXX_Size() int {
	return xxx_messageInfo_DocQueryReq.Size(m)
}
func (m *DocQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DocQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_DocQueryReq proto.InternalMessageInfo

func (m *DocQueryReq) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *DocQueryReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DocQueryReq) GetJson() []byte {
	if m != nil {
		return m.Json
	}
	return nil
}

//message for doc query response
type DocQueryResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	RecList              [][]byte `protobuf:"bytes,3,rep,name=recList,proto3" json:"recList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocQueryResp) Reset()         { *m = DocQueryResp{} }
func (m *DocQueryResp) String() string { return proto.CompactTextString(m) }
func (*DocQueryResp) ProtoMessage()    {}
func (*DocQueryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

func (m *DocQueryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocQueryResp.Unmarshal(m, b)
}
func (m *DocQueryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocQueryResp.Marshal(b, m, deterministic)
}
func (m *DocQueryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocQueryResp.Merge(m, src)
}
func (m *DocQueryResp) XXX_Size() int {
	return xxx_messageInfo_DocQueryResp.Size(m)
}
func (m *DocQueryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DocQueryResp.DiscardUnknown(m)
}

var xxx_messageInfo_DocQueryResp proto.InternalMessageInfo

func (m *DocQueryResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DocQueryResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DocQueryResp) GetRecList() [][]byte {
	if m != nil {
		return m.RecList
	}
	return nil
}

func init() {
	proto.RegisterType((*DocSyncReq)(nil), "search.DocSyncReq")
	proto.RegisterType((*DocRemoveReq)(nil), "search.DocRemoveReq")
	proto.RegisterType((*DocSyncResp)(nil), "search.DocSyncResp")
	proto.RegisterType((*DocQueryReq)(nil), "search.DocQueryReq")
	proto.RegisterType((*DocQueryResp)(nil), "search.DocQueryResp")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4f, 0x83, 0x50,
	0x10, 0x0c, 0xa5, 0xf4, 0x63, 0xc5, 0x44, 0xb7, 0x3d, 0x90, 0x9e, 0x08, 0x17, 0x39, 0x71, 0xa8,
	0xb1, 0x3f, 0xc0, 0x34, 0x51, 0x13, 0x2f, 0x3e, 0x2e, 0x5e, 0x71, 0x79, 0x51, 0xd4, 0xf2, 0x90,
	0xf7, 0xda, 0x84, 0xbf, 0xe5, 0x2f, 0x34, 0x2c, 0x1f, 0x92, 0xb4, 0xd1, 0xdb, 0xce, 0x32, 0x3b,
	0x33, 0x0c, 0x80, 0xab, 0x65, 0x52, 0xd2, 0x5b, 0x54, 0x94, 0xca, 0x28, 0x9c, 0x34, 0x28, 0xb8,
	0x07, 0xd8, 0x2a, 0x8a, 0xab, 0x9c, 0x84, 0xfc, 0xc2, 0x0b, 0xb0, 0x4d, 0xf2, 0xea, 0x59, 0xbe,
	0x15, 0xce, 0x45, 0x3d, 0xe2, 0x12, 0x9c, 0x54, 0xd1, 0x43, 0xea, 0x8d, 0x78, 0xd7, 0x00, 0x44,
	0x18, 0xbf, 0x6b, 0x95, 0x7b, 0xb6, 0x6f, 0x85, 0xae, 0xe0, 0x39, 0xd8, 0x80, 0xbb, 0x55, 0x24,
	0xe4, 0x4e, 0x1d, 0xe4, 0xbf, 0x5a, 0x76, 0xaf, 0x15, 0x5c, 0xc1, 0x59, 0x9f, 0x40, 0x17, 0xe8,
	0xc1, 0x54, 0xef, 0x89, 0xa4, 0xd6, 0x7c, 0x3a, 0x13, 0x1d, 0x0c, 0xee, 0x98, 0xf8, 0xb4, 0x97,
	0x65, 0x55, 0xeb, 0x23, 0x8c, 0x3f, 0xb2, 0x3c, 0x65, 0x96, 0x23, 0x78, 0xee, 0x3c, 0x47, 0xbf,
	0x9e, 0xa7, 0x92, 0x3e, 0x73, 0xd2, 0x56, 0xe8, 0x2f, 0xcb, 0x3a, 0xb1, 0x51, 0x26, 0xf9, 0x64,
	0x45, 0x47, 0x34, 0xa0, 0xe6, 0x97, 0x92, 0x1e, 0x33, 0x6d, 0x3c, 0xdb, 0xb7, 0x43, 0x57, 0x74,
	0x70, 0xfd, 0x6d, 0xc1, 0x79, 0xcc, 0xc5, 0xc6, 0xb2, 0x3c, 0x64, 0x24, 0xf1, 0x06, 0x66, 0x9d,
	0x17, 0x2e, 0xa2, 0xf6, 0x13, 0x0c, 0x5e, 0x63, 0xb5, 0x3c, 0x5e, 0xea, 0x02, 0x37, 0x30, 0xef,
	0xcb, 0xc4, 0x21, 0xa5, 0xef, 0x77, 0x35, 0x54, 0xeb, 0xdb, 0x5b, 0xc3, 0xb4, 0x85, 0x88, 0x47,
	0xcf, 0x4f, 0xdf, 0xdc, 0x2e, 0xe0, 0x92, 0xd4, 0x2e, 0x32, 0x14, 0x99, 0x2c, 0xaf, 0x9a, 0xf8,
	0x2f, 0x13, 0xfe, 0x4d, 0xae, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x22, 0xf9, 0x37, 0x36,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	//doc query
	DocQuery(ctx context.Context, in *DocQueryReq, opts ...grpc.CallOption) (*DocQueryResp, error)
	//doc remove
	DocRemove(ctx context.Context, in *DocRemoveReq, opts ...grpc.CallOption) (*DocSyncResp, error)
	//doc sync
	DocSync(ctx context.Context, in *DocSyncReq, opts ...grpc.CallOption) (*DocSyncResp, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) DocQuery(ctx context.Context, in *DocQueryReq, opts ...grpc.CallOption) (*DocQueryResp, error) {
	out := new(DocQueryResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DocRemove(ctx context.Context, in *DocRemoveReq, opts ...grpc.CallOption) (*DocSyncResp, error) {
	out := new(DocSyncResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DocSync(ctx context.Context, in *DocSyncReq, opts ...grpc.CallOption) (*DocSyncResp, error) {
	out := new(DocSyncResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	//doc query
	DocQuery(context.Context, *DocQueryReq) (*DocQueryResp, error)
	//doc remove
	DocRemove(context.Context, *DocRemoveReq) (*DocSyncResp, error)
	//doc sync
	DocSync(context.Context, *DocSyncReq) (*DocSyncResp, error)
}

// UnimplementedSearchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServiceServer struct {
}

func (*UnimplementedSearchServiceServer) DocQuery(ctx context.Context, req *DocQueryReq) (*DocQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocQuery not implemented")
}
func (*UnimplementedSearchServiceServer) DocRemove(ctx context.Context, req *DocRemoveReq) (*DocSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocRemove not implemented")
}
func (*UnimplementedSearchServiceServer) DocSync(ctx context.Context, req *DocSyncReq) (*DocSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocSync not implemented")
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_DocQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocQuery(ctx, req.(*DocQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DocRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocRemoveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocRemove(ctx, req.(*DocRemoveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DocSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocSyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocSync(ctx, req.(*DocSyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "search.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DocQuery",
			Handler:    _SearchService_DocQuery_Handler,
		},
		{
			MethodName: "DocRemove",
			Handler:    _SearchService_DocRemove_Handler,
		},
		{
			MethodName: "DocSync",
			Handler:    _SearchService_DocSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
