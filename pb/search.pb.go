// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: search.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TinySearchBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TinySearchBase) Reset() {
	*x = TinySearchBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TinySearchBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TinySearchBase) ProtoMessage() {}

func (x *TinySearchBase) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TinySearchBase.ProtoReflect.Descriptor instead.
func (*TinySearchBase) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{0}
}

func (x *TinySearchBase) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//message for doc sync request
type DocSyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`     //index tag
	DocId string `protobuf:"bytes,2,opt,name=docId,proto3" json:"docId,omitempty"` //doc id
	Json  []byte `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`   //doc json byte
}

func (x *DocSyncReq) Reset() {
	*x = DocSyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocSyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocSyncReq) ProtoMessage() {}

func (x *DocSyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocSyncReq.ProtoReflect.Descriptor instead.
func (*DocSyncReq) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{1}
}

func (x *DocSyncReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DocSyncReq) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *DocSyncReq) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

//message for doc remove request
type DocRemoveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`     //index tag
	DocId []string `protobuf:"bytes,2,rep,name=docId,proto3" json:"docId,omitempty"` //doc ids
}

func (x *DocRemoveReq) Reset() {
	*x = DocRemoveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocRemoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocRemoveReq) ProtoMessage() {}

func (x *DocRemoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocRemoveReq.ProtoReflect.Descriptor instead.
func (*DocRemoveReq) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{2}
}

func (x *DocRemoveReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DocRemoveReq) GetDocId() []string {
	if x != nil {
		return x.DocId
	}
	return nil
}

//message for doc sync response
type DocSyncResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *DocSyncResp) Reset() {
	*x = DocSyncResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocSyncResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocSyncResp) ProtoMessage() {}

func (x *DocSyncResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocSyncResp.ProtoReflect.Descriptor instead.
func (*DocSyncResp) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{3}
}

func (x *DocSyncResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DocSyncResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//message for doc get
type DocGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`       //index tag
	DocIds []string `protobuf:"bytes,2,rep,name=docIds,proto3" json:"docIds,omitempty"` //doc id array
}

func (x *DocGetReq) Reset() {
	*x = DocGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocGetReq) ProtoMessage() {}

func (x *DocGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocGetReq.ProtoReflect.Descriptor instead.
func (*DocGetReq) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{4}
}

func (x *DocGetReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DocGetReq) GetDocIds() []string {
	if x != nil {
		return x.DocIds
	}
	return nil
}

//message for doc get response
type DocGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg   string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	JsonByte [][]byte `protobuf:"bytes,3,rep,name=jsonByte,proto3" json:"jsonByte,omitempty"` //json obj byte array
}

func (x *DocGetResp) Reset() {
	*x = DocGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocGetResp) ProtoMessage() {}

func (x *DocGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocGetResp.ProtoReflect.Descriptor instead.
func (*DocGetResp) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{5}
}

func (x *DocGetResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DocGetResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *DocGetResp) GetJsonByte() [][]byte {
	if x != nil {
		return x.JsonByte
	}
	return nil
}

//message for doc query request
type DocQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind int32  `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"` //query kind
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`    //index tag
	Json []byte `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`  //query opt json byte
}

func (x *DocQueryReq) Reset() {
	*x = DocQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocQueryReq) ProtoMessage() {}

func (x *DocQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocQueryReq.ProtoReflect.Descriptor instead.
func (*DocQueryReq) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{6}
}

func (x *DocQueryReq) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *DocQueryReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DocQueryReq) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

//message for doc query response
type DocQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg   string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	JsonByte []byte `protobuf:"bytes,3,opt,name=jsonByte,proto3" json:"jsonByte,omitempty"` //json obj byte
}

func (x *DocQueryResp) Reset() {
	*x = DocQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocQueryResp) ProtoMessage() {}

func (x *DocQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocQueryResp.ProtoReflect.Descriptor instead.
func (*DocQueryResp) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{7}
}

func (x *DocQueryResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DocQueryResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *DocQueryResp) GetJsonByte() []byte {
	if x != nil {
		return x.JsonByte
	}
	return nil
}

//message for index create
type IndexCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"` //index tag
}

func (x *IndexCreateReq) Reset() {
	*x = IndexCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexCreateReq) ProtoMessage() {}

func (x *IndexCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexCreateReq.ProtoReflect.Descriptor instead.
func (*IndexCreateReq) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{8}
}

func (x *IndexCreateReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

//message for index create response
type IndexCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *IndexCreateResp) Reset() {
	*x = IndexCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexCreateResp) ProtoMessage() {}

func (x *IndexCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexCreateResp.ProtoReflect.Descriptor instead.
func (*IndexCreateResp) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{9}
}

func (x *IndexCreateResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IndexCreateResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_search_proto protoreflect.FileDescriptor

var file_search_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6e, 0x79, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x48,
	0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x6f, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f,
	0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x35, 0x0a, 0x09, 0x44, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x5c, 0x0a,
	0x0c, 0x44, 0x6f, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x22, 0x22, 0x0a, 0x0e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x43, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x32, 0xa3, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x44, 0x6f, 0x63, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x44, 0x6f, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x06, 0x44, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x44, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x44, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x09, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x44, 0x6f, 0x63, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x44, 0x6f, 0x63, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x44,
	0x6f, 0x63, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x17, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x74, 0x63, 0x2e, 0x74, 0x69, 0x6e, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5a,
	0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_proto_rawDescOnce sync.Once
	file_search_proto_rawDescData = file_search_proto_rawDesc
)

func file_search_proto_rawDescGZIP() []byte {
	file_search_proto_rawDescOnce.Do(func() {
		file_search_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_proto_rawDescData)
	})
	return file_search_proto_rawDescData
}

var file_search_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_search_proto_goTypes = []interface{}{
	(*TinySearchBase)(nil),  // 0: search.TinySearchBase
	(*DocSyncReq)(nil),      // 1: search.DocSyncReq
	(*DocRemoveReq)(nil),    // 2: search.DocRemoveReq
	(*DocSyncResp)(nil),     // 3: search.DocSyncResp
	(*DocGetReq)(nil),       // 4: search.DocGetReq
	(*DocGetResp)(nil),      // 5: search.DocGetResp
	(*DocQueryReq)(nil),     // 6: search.DocQueryReq
	(*DocQueryResp)(nil),    // 7: search.DocQueryResp
	(*IndexCreateReq)(nil),  // 8: search.IndexCreateReq
	(*IndexCreateResp)(nil), // 9: search.IndexCreateResp
}
var file_search_proto_depIdxs = []int32{
	6, // 0: search.SearchService.DocQuery:input_type -> search.DocQueryReq
	4, // 1: search.SearchService.DocGet:input_type -> search.DocGetReq
	2, // 2: search.SearchService.DocRemove:input_type -> search.DocRemoveReq
	1, // 3: search.SearchService.DocSync:input_type -> search.DocSyncReq
	8, // 4: search.SearchService.IndexCreate:input_type -> search.IndexCreateReq
	7, // 5: search.SearchService.DocQuery:output_type -> search.DocQueryResp
	5, // 6: search.SearchService.DocGet:output_type -> search.DocGetResp
	3, // 7: search.SearchService.DocRemove:output_type -> search.DocSyncResp
	3, // 8: search.SearchService.DocSync:output_type -> search.DocSyncResp
	9, // 9: search.SearchService.IndexCreate:output_type -> search.IndexCreateResp
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_search_proto_init() }
func file_search_proto_init() {
	if File_search_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TinySearchBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocSyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocRemoveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocSyncResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_proto_goTypes,
		DependencyIndexes: file_search_proto_depIdxs,
		MessageInfos:      file_search_proto_msgTypes,
	}.Build()
	File_search_proto = out.File
	file_search_proto_rawDesc = nil
	file_search_proto_goTypes = nil
	file_search_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	//doc query, include general query, agg, suggest, etc.
	DocQuery(ctx context.Context, in *DocQueryReq, opts ...grpc.CallOption) (*DocQueryResp, error)
	//doc get
	DocGet(ctx context.Context, in *DocGetReq, opts ...grpc.CallOption) (*DocGetResp, error)
	//doc remove
	DocRemove(ctx context.Context, in *DocRemoveReq, opts ...grpc.CallOption) (*DocSyncResp, error)
	//doc sync
	DocSync(ctx context.Context, in *DocSyncReq, opts ...grpc.CallOption) (*DocSyncResp, error)
	//index create
	IndexCreate(ctx context.Context, in *IndexCreateReq, opts ...grpc.CallOption) (*IndexCreateResp, error)
}

type searchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchServiceClient(cc grpc.ClientConnInterface) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) DocQuery(ctx context.Context, in *DocQueryReq, opts ...grpc.CallOption) (*DocQueryResp, error) {
	out := new(DocQueryResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DocGet(ctx context.Context, in *DocGetReq, opts ...grpc.CallOption) (*DocGetResp, error) {
	out := new(DocGetResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DocRemove(ctx context.Context, in *DocRemoveReq, opts ...grpc.CallOption) (*DocSyncResp, error) {
	out := new(DocSyncResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DocSync(ctx context.Context, in *DocSyncReq, opts ...grpc.CallOption) (*DocSyncResp, error) {
	out := new(DocSyncResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/DocSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) IndexCreate(ctx context.Context, in *IndexCreateReq, opts ...grpc.CallOption) (*IndexCreateResp, error) {
	out := new(IndexCreateResp)
	err := c.cc.Invoke(ctx, "/search.SearchService/IndexCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	//doc query, include general query, agg, suggest, etc.
	DocQuery(context.Context, *DocQueryReq) (*DocQueryResp, error)
	//doc get
	DocGet(context.Context, *DocGetReq) (*DocGetResp, error)
	//doc remove
	DocRemove(context.Context, *DocRemoveReq) (*DocSyncResp, error)
	//doc sync
	DocSync(context.Context, *DocSyncReq) (*DocSyncResp, error)
	//index create
	IndexCreate(context.Context, *IndexCreateReq) (*IndexCreateResp, error)
}

// UnimplementedSearchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServiceServer struct {
}

func (*UnimplementedSearchServiceServer) DocQuery(context.Context, *DocQueryReq) (*DocQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocQuery not implemented")
}
func (*UnimplementedSearchServiceServer) DocGet(context.Context, *DocGetReq) (*DocGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocGet not implemented")
}
func (*UnimplementedSearchServiceServer) DocRemove(context.Context, *DocRemoveReq) (*DocSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocRemove not implemented")
}
func (*UnimplementedSearchServiceServer) DocSync(context.Context, *DocSyncReq) (*DocSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocSync not implemented")
}
func (*UnimplementedSearchServiceServer) IndexCreate(context.Context, *IndexCreateReq) (*IndexCreateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IndexCreate not implemented")
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_DocQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocQuery(ctx, req.(*DocQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DocGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocGet(ctx, req.(*DocGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DocRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocRemoveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocRemove(ctx, req.(*DocRemoveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DocSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocSyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DocSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DocSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DocSync(ctx, req.(*DocSyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_IndexCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).IndexCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/IndexCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).IndexCreate(ctx, req.(*IndexCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "search.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DocQuery",
			Handler:    _SearchService_DocQuery_Handler,
		},
		{
			MethodName: "DocGet",
			Handler:    _SearchService_DocGet_Handler,
		},
		{
			MethodName: "DocRemove",
			Handler:    _SearchService_DocRemove_Handler,
		},
		{
			MethodName: "DocSync",
			Handler:    _SearchService_DocSync_Handler,
		},
		{
			MethodName: "IndexCreate",
			Handler:    _SearchService_IndexCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
